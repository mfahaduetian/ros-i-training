# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.6)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.20)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget tesseract::tesseract_collision_core tesseract::tesseract_collision_test_suite tesseract::tesseract_collision_test_suite_benchmarks tesseract::create_convex_hull tesseract::tesseract_collision_bullet tesseract::tesseract_collision_bullet_factories tesseract::tesseract_collision_vhacd_convex_decomposition)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target tesseract::tesseract_collision_core
add_library(tesseract::tesseract_collision_core SHARED IMPORTED)

set_target_properties(tesseract::tesseract_collision_core PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "-mno-avx"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/tesseract_ws/src/tesseract/tesseract_collision/core/include"
  INTERFACE_LINK_LIBRARIES "Eigen3::Eigen;tesseract::tesseract_common;tesseract::tesseract_geometry;Boost::boost;Boost::system;Boost::serialization;yaml-cpp"
)

# Create imported target tesseract::tesseract_collision_test_suite
add_library(tesseract::tesseract_collision_test_suite INTERFACE IMPORTED)

set_target_properties(tesseract::tesseract_collision_test_suite PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "-mno-avx"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/tesseract_ws/src/tesseract/tesseract_collision/core/include"
  INTERFACE_LINK_LIBRARIES "Eigen3::Eigen;tesseract::tesseract_support;tesseract::tesseract_geometry;tesseract::tesseract_collision_core"
)

# Create imported target tesseract::tesseract_collision_test_suite_benchmarks
add_library(tesseract::tesseract_collision_test_suite_benchmarks INTERFACE IMPORTED)

set_target_properties(tesseract::tesseract_collision_test_suite_benchmarks PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "-mno-avx"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/tesseract_ws/src/tesseract/tesseract_collision/core/include"
  INTERFACE_LINK_LIBRARIES "Eigen3::Eigen;tesseract::tesseract_support;tesseract::tesseract_geometry"
)

# Create imported target tesseract::create_convex_hull
add_executable(tesseract::create_convex_hull IMPORTED)

set_target_properties(tesseract::create_convex_hull PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/tesseract_ws/src/tesseract/tesseract_collision/bullet/include"
)

# Create imported target tesseract::tesseract_collision_bullet
add_library(tesseract::tesseract_collision_bullet SHARED IMPORTED)

set_target_properties(tesseract::tesseract_collision_bullet PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "-mno-avx"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/tesseract_ws/src/tesseract/tesseract_collision/bullet/include"
  INTERFACE_LINK_LIBRARIES "tesseract::tesseract_collision_core;Eigen3::Eigen;Bullet3::Bullet;tesseract::tesseract_geometry;console_bridge::console_bridge;octomap;octomath"
)

# Create imported target tesseract::tesseract_collision_bullet_factories
add_library(tesseract::tesseract_collision_bullet_factories SHARED IMPORTED)

set_target_properties(tesseract::tesseract_collision_bullet_factories PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "-mno-avx"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/tesseract_ws/src/tesseract/tesseract_collision/bullet/include"
  INTERFACE_LINK_LIBRARIES "tesseract::tesseract_collision_bullet"
)

# Create imported target tesseract::tesseract_collision_vhacd_convex_decomposition
add_library(tesseract::tesseract_collision_vhacd_convex_decomposition SHARED IMPORTED)

set_target_properties(tesseract::tesseract_collision_vhacd_convex_decomposition PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "-mno-avx"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/tesseract_ws/src/tesseract/tesseract_collision/vhacd/include"
  INTERFACE_LINK_LIBRARIES "tesseract::tesseract_collision_core;tesseract::tesseract_collision_bullet;Eigen3::Eigen;tesseract::tesseract_geometry;console_bridge::console_bridge"
)

# Import target "tesseract::tesseract_collision_core" for configuration ""
set_property(TARGET tesseract::tesseract_collision_core APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::tesseract_collision_core PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_collision/core/libtesseract_collision_core.so"
  IMPORTED_SONAME_NOCONFIG "libtesseract_collision_core.so"
  )

# Import target "tesseract::create_convex_hull" for configuration ""
set_property(TARGET tesseract::create_convex_hull APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::create_convex_hull PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_collision/bullet/create_convex_hull"
  )

# Import target "tesseract::tesseract_collision_bullet" for configuration ""
set_property(TARGET tesseract::tesseract_collision_bullet APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::tesseract_collision_bullet PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_collision/bullet/libtesseract_collision_bullet.so"
  IMPORTED_SONAME_NOCONFIG "libtesseract_collision_bullet.so"
  )

# Import target "tesseract::tesseract_collision_bullet_factories" for configuration ""
set_property(TARGET tesseract::tesseract_collision_bullet_factories APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::tesseract_collision_bullet_factories PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_collision/bullet/libtesseract_collision_bullet_factories.so"
  IMPORTED_SONAME_NOCONFIG "libtesseract_collision_bullet_factories.so"
  )

# Import target "tesseract::tesseract_collision_vhacd_convex_decomposition" for configuration ""
set_property(TARGET tesseract::tesseract_collision_vhacd_convex_decomposition APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::tesseract_collision_vhacd_convex_decomposition PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_collision/vhacd/libtesseract_collision_vhacd_convex_decomposition.so"
  IMPORTED_SONAME_NOCONFIG "libtesseract_collision_vhacd_convex_decomposition.so"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
