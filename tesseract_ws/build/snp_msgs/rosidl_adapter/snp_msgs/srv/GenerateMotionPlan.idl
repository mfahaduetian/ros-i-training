// generated from rosidl_adapter/resource/srv.idl.em
// with input from snp_msgs/srv/GenerateMotionPlan.srv
// generated code does not contain a copyright notice

#include "snp_msgs/msg/ToolPaths.idl"
#include "trajectory_msgs/msg/JointTrajectory.idl"

module snp_msgs {
  module srv {
    @verbatim (language="comment", text=
      "Request")
    struct GenerateMotionPlan_Request {
      @verbatim (language="comment", text=
        "Tool Paths - the input tool paths that need to be planned on.  These follow Noether conventions." "\n"
        "i.e. ToolPaths is a raster pattern.  ToolPath is a single raster, which may be broken up into" "\n"
        "discrete segments, each made of waypoints.")
      snp_msgs::msg::ToolPaths tool_paths;

      @verbatim (language="comment", text=
        "Params" "\n"
        "[insert any relevant motion planning parameters here]")
      @unit (value="insert any relevant motion planning parameters here")
      string motion_group;

      string tcp_frame;

      @verbatim (language="comment", text=
        "Mesh - this is the scanned mesh which toolpaths were generated on.  Any path generated should be" "\n"
        "checked for collision against this mesh to ensure we don't hit it by mistake.")
      string mesh_filename;

      string mesh_frame;
    };
    @verbatim (language="comment", text=
      "Response")
    struct GenerateMotionPlan_Response {
      @verbatim (language="comment", text=
        "Motion Plan - a joint trajectory for the robot to follow")
      trajectory_msgs::msg::JointTrajectory motion_plan;

      @verbatim (language="comment", text=
        "Success and error information")
      boolean success;

      string message;
    };
  };
};
