# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.6)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.20)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget tesseract::tesseract_task_composer tesseract::tesseract_task_composer_nodes tesseract::tesseract_task_composer_factories tesseract::tesseract_task_composer_planning tesseract::tesseract_task_composer_planning_nodes tesseract::tesseract_task_composer_planning_factories tesseract::tesseract_task_composer_taskflow tesseract::tesseract_task_composer_taskflow_factories tesseract::tesseract_task_composer_example tesseract::tesseract_task_composer_trajopt_example tesseract::tesseract_task_composer_raster_example)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target tesseract::tesseract_task_composer
add_library(tesseract::tesseract_task_composer SHARED IMPORTED)

set_target_properties(tesseract::tesseract_task_composer PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "TESSERACT_TASK_COMPOSER_DIR=\"/home/ubuntu/tesseract_ws/install/tesseract_task_composer/share/tesseract_task_composer\""
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "-mno-avx"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/tesseract_ws/src/tesseract_planning/tesseract_task_composer/core/include"
  INTERFACE_LINK_LIBRARIES "console_bridge::console_bridge;tesseract::tesseract_common;Boost::boost;Boost::serialization;yaml-cpp"
)

# Create imported target tesseract::tesseract_task_composer_nodes
add_library(tesseract::tesseract_task_composer_nodes SHARED IMPORTED)

set_target_properties(tesseract::tesseract_task_composer_nodes PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "-mno-avx"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/tesseract_ws/src/tesseract_planning/tesseract_task_composer/core/include"
  INTERFACE_LINK_LIBRARIES "tesseract::tesseract_task_composer;console_bridge::console_bridge;tesseract::tesseract_common;Boost::boost;Boost::serialization;yaml-cpp"
)

# Create imported target tesseract::tesseract_task_composer_factories
add_library(tesseract::tesseract_task_composer_factories SHARED IMPORTED)

set_target_properties(tesseract::tesseract_task_composer_factories PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "-mno-avx"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/tesseract_ws/src/tesseract_planning/tesseract_task_composer/core/include"
  INTERFACE_LINK_LIBRARIES "tesseract::tesseract_task_composer;tesseract::tesseract_task_composer_nodes"
)

# Create imported target tesseract::tesseract_task_composer_planning
add_library(tesseract::tesseract_task_composer_planning SHARED IMPORTED)

set_target_properties(tesseract::tesseract_task_composer_planning PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "-mno-avx"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/tesseract_ws/src/tesseract_planning/tesseract_task_composer/planning/include"
  INTERFACE_LINK_LIBRARIES "tesseract::tesseract_task_composer;console_bridge::console_bridge;tesseract::tesseract_common;tesseract::tesseract_command_language;tesseract::tesseract_environment;Boost::boost;Boost::serialization;yaml-cpp"
)

# Create imported target tesseract::tesseract_task_composer_planning_nodes
add_library(tesseract::tesseract_task_composer_planning_nodes SHARED IMPORTED)

set_target_properties(tesseract::tesseract_task_composer_planning_nodes PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "-mno-avx"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/tesseract_ws/src/tesseract_planning/tesseract_task_composer/planning/include"
  INTERFACE_LINK_LIBRARIES "tesseract::tesseract_task_composer;tesseract::tesseract_task_composer_nodes;tesseract::tesseract_task_composer_planning;console_bridge::console_bridge;tesseract::tesseract_common;tesseract::tesseract_command_language;tesseract::tesseract_motion_planners_core;tesseract::tesseract_motion_planners_simple;tesseract::tesseract_motion_planners_trajopt;tesseract::tesseract_motion_planners_ompl;tesseract::tesseract_motion_planners_descartes;tesseract::tesseract_time_parameterization_core;tesseract::tesseract_time_parameterization_isp;tesseract::tesseract_time_parameterization_ruckig;tesseract::tesseract_time_parameterization_totg;trajopt::trajopt;Boost::boost;Boost::serialization;yaml-cpp"
)

# Create imported target tesseract::tesseract_task_composer_planning_factories
add_library(tesseract::tesseract_task_composer_planning_factories SHARED IMPORTED)

set_target_properties(tesseract::tesseract_task_composer_planning_factories PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "TESSERACT_TASK_COMPOSER_HAS_TRAJOPT_IFOPT=1"
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "-mno-avx"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/tesseract_ws/src/tesseract_planning/tesseract_task_composer/planning/include"
  INTERFACE_LINK_LIBRARIES "tesseract::tesseract_task_composer;tesseract::tesseract_task_composer_planning_nodes;tesseract::tesseract_motion_planners_simple;tesseract::tesseract_motion_planners_trajopt;tesseract::tesseract_motion_planners_ompl;tesseract::tesseract_motion_planners_descartes;tesseract::tesseract_motion_planners_trajopt_ifopt"
)

# Create imported target tesseract::tesseract_task_composer_taskflow
add_library(tesseract::tesseract_task_composer_taskflow SHARED IMPORTED)

set_target_properties(tesseract::tesseract_task_composer_taskflow PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "-mno-avx"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/tesseract_ws/src/tesseract_planning/tesseract_task_composer/taskflow/include"
  INTERFACE_LINK_LIBRARIES "tesseract::tesseract_task_composer;console_bridge::console_bridge;tesseract::tesseract_common;Boost::boost;Boost::serialization;Taskflow::Taskflow;yaml-cpp"
)

# Create imported target tesseract::tesseract_task_composer_taskflow_factories
add_library(tesseract::tesseract_task_composer_taskflow_factories SHARED IMPORTED)

set_target_properties(tesseract::tesseract_task_composer_taskflow_factories PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "-mno-avx"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/tesseract_ws/src/tesseract_planning/tesseract_task_composer/taskflow/include"
  INTERFACE_LINK_LIBRARIES "tesseract::tesseract_task_composer_taskflow"
)

# Create imported target tesseract::tesseract_task_composer_example
add_executable(tesseract::tesseract_task_composer_example IMPORTED)

# Create imported target tesseract::tesseract_task_composer_trajopt_example
add_executable(tesseract::tesseract_task_composer_trajopt_example IMPORTED)

# Create imported target tesseract::tesseract_task_composer_raster_example
add_executable(tesseract::tesseract_task_composer_raster_example IMPORTED)

# Import target "tesseract::tesseract_task_composer" for configuration ""
set_property(TARGET tesseract::tesseract_task_composer APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::tesseract_task_composer PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_task_composer/core/libtesseract_task_composer.so"
  IMPORTED_SONAME_NOCONFIG "libtesseract_task_composer.so"
  )

# Import target "tesseract::tesseract_task_composer_nodes" for configuration ""
set_property(TARGET tesseract::tesseract_task_composer_nodes APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::tesseract_task_composer_nodes PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_task_composer/core/libtesseract_task_composer_nodes.so"
  IMPORTED_SONAME_NOCONFIG "libtesseract_task_composer_nodes.so"
  )

# Import target "tesseract::tesseract_task_composer_factories" for configuration ""
set_property(TARGET tesseract::tesseract_task_composer_factories APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::tesseract_task_composer_factories PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_task_composer/core/libtesseract_task_composer_factories.so"
  IMPORTED_SONAME_NOCONFIG "libtesseract_task_composer_factories.so"
  )

# Import target "tesseract::tesseract_task_composer_planning" for configuration ""
set_property(TARGET tesseract::tesseract_task_composer_planning APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::tesseract_task_composer_planning PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_task_composer/planning/libtesseract_task_composer_planning.so"
  IMPORTED_SONAME_NOCONFIG "libtesseract_task_composer_planning.so"
  )

# Import target "tesseract::tesseract_task_composer_planning_nodes" for configuration ""
set_property(TARGET tesseract::tesseract_task_composer_planning_nodes APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::tesseract_task_composer_planning_nodes PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_task_composer/planning/libtesseract_task_composer_planning_nodes.so"
  IMPORTED_SONAME_NOCONFIG "libtesseract_task_composer_planning_nodes.so"
  )

# Import target "tesseract::tesseract_task_composer_planning_factories" for configuration ""
set_property(TARGET tesseract::tesseract_task_composer_planning_factories APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::tesseract_task_composer_planning_factories PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_task_composer/planning/libtesseract_task_composer_planning_factories.so"
  IMPORTED_SONAME_NOCONFIG "libtesseract_task_composer_planning_factories.so"
  )

# Import target "tesseract::tesseract_task_composer_taskflow" for configuration ""
set_property(TARGET tesseract::tesseract_task_composer_taskflow APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::tesseract_task_composer_taskflow PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_task_composer/taskflow/libtesseract_task_composer_taskflow.so"
  IMPORTED_SONAME_NOCONFIG "libtesseract_task_composer_taskflow.so"
  )

# Import target "tesseract::tesseract_task_composer_taskflow_factories" for configuration ""
set_property(TARGET tesseract::tesseract_task_composer_taskflow_factories APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::tesseract_task_composer_taskflow_factories PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_task_composer/taskflow/libtesseract_task_composer_taskflow_factories.so"
  IMPORTED_SONAME_NOCONFIG "libtesseract_task_composer_taskflow_factories.so"
  )

# Import target "tesseract::tesseract_task_composer_example" for configuration ""
set_property(TARGET tesseract::tesseract_task_composer_example APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::tesseract_task_composer_example PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_task_composer/examples/tesseract_task_composer_example"
  )

# Import target "tesseract::tesseract_task_composer_trajopt_example" for configuration ""
set_property(TARGET tesseract::tesseract_task_composer_trajopt_example APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::tesseract_task_composer_trajopt_example PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_task_composer/examples/tesseract_task_composer_trajopt_example"
  )

# Import target "tesseract::tesseract_task_composer_raster_example" for configuration ""
set_property(TARGET tesseract::tesseract_task_composer_raster_example APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(tesseract::tesseract_task_composer_raster_example PROPERTIES
  IMPORTED_LOCATION_NOCONFIG "/home/ubuntu/tesseract_ws/build/tesseract_task_composer/examples/tesseract_task_composer_raster_example"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
